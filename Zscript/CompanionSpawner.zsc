class CompanionSpawner : RandomSpawner
{
  Default
  {
    DropItem "MarineCompanionFist";
    DropItem "MarineCompanionPistol";
    DropItem "MarineCompanionMG";
    DropItem "MarineCompanionCG";
    DropItem "MarineCompanionSG";
    DropItem "MarineCompanionSSG";
    DropItem "MarineCompanionPlasma";
    DropItem "MarineCompanionBFG10K";
    DropItem "MarineCompanionBFG9000";
    DropItem "MarineCompanionSniper";
    DropItem "MarineCompanionHSMissile";
    DropItem "MarineCompanionGL";
    DropItem "MarineCompanionFlamethrower";
    DropItem "MarineCompanionRocket";
    DropItem "MarineCompanionRailgun";
    DropItem "MarineCompanionChainsaw";
    DropItem "MarineCompanionMinigun";
    DropItem "CompanionArachnotron";
    DropItem "CompanionArchvile";
    DropItem "CompanionBaronOfHell";
    DropItem "CompanionCacodemon";
    DropItem "CompanionChaingunGuy";
    DropItem "CompanionCyberdemon";
    DropItem "CompanionDemon";
    DropItem "CompanionDoomImp";
    DropItem "CompanionFatso";
    DropItem "CompanionHellKnight";
    DropItem "CompanionLostSoul";
    DropItem "CompanionPainElemental";
    DropItem "CompanionRevenant";
    DropItem "CompanionShotgunGuy";
    DropItem "CompanionSpectre";
    DropItem "CompanionSpiderMastermind";
    DropItem "CompanionWolfensteinSS";
    DropItem "CompanionZombieMan";
  }

  override void PostSpawn(Actor companion){

    companion.A_SetSize(companion.radius * 0.2, companion.height * 0.2);
    companion.Scale = (0.2, 0.2);
    companion.bFriendly = true;
    companion.bQuickToRetaliate = true;
    companion.bSlidesOnWalls = true;
    companion.bNoBlockMonst = true;
    companion.bCountKill = false;
    companion.bAvoidMelee = true;
    companion.bThruSpecies = true;
    companion.bAlwaysFast = true;
    companion.bMissileMore = true;
    companion.bMissileEvenMore = true;
    companion.bHarmFriends = false;
    companion.bDontHarmSpecies = true;
    companion.bIsMonster = true;
    companion.bSolid = true;
    companion.bCanPushWalls = true;
    companion.bCanUseWalls = true;
    companion.bCanPass = true;
    companion.bShootable = true;
    companion.health = 10;
    companion.MaxTargetRange = 2048;
    companion.MaxStepHeight = 24;
    companion.MaxDropoffHeight = 24;
    companion.A_SetSpecies("Companion");
    companion.ApplyDamageFactor("Companion", 0.0);

    GlobalVariables g;
    g = GlobalVariables(EventHandler.Find("GlobalVariables"));
    g.companions.Push(companion);

    let p = players[PlayerNumber()].mo;
    companion.Angle = p.Angle;
    companion.movedir = Utilities.angleToMoveDir(p.Angle);
    companion.TryWalk();
  }
}